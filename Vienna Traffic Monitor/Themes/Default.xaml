<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:m="clr-namespace:Microsoft.Maps.MapControl.WPF;assembly=Microsoft.Maps.MapControl.WPF">

    <Color x:Key="SelectedColor">YellowGreen</Color>
    <SolidColorBrush x:Key="MainColor" Color="{DynamicResource SelectedColor}"/>
    <SolidColorBrush x:Key="MainColorDark" Color="#6c9023"/>
    <SolidColorBrush x:Key="Background" Color="White"/>
    <SolidColorBrush x:Key="BgSlider" Color="#FF939393"/>
    <SolidColorBrush x:Key="BorderSlider" Color="#FF8D8D8D"/>
    <SolidColorBrush x:Key="BackgroundPushpin" Color="#1C1C1C"/>


    <!-- Pushpins -->
    <Style TargetType="m:Pushpin" x:Key="MapPushpin">
        <Setter Property="Background" Value="{DynamicResource BackgroundPushpin}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="Transparent">
                        <Popup Name="PopupGrid" IsOpen="False" Placement="Top" AllowsTransparency="True">
                            <Border BorderBrush="{DynamicResource MainColorDark}" BorderThickness="1" CornerRadius="2" Background="Transparent">
                                <Grid Background="{DynamicResource MainColor}" Opacity="0.8">
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Label Opacity="1" Grid.Row="0" Content="{Binding Haltestelle.Name}" Foreground="White" />
                                </Grid>
                            </Border>
                        </Popup>
                        <m:Pushpin Background="{TemplateBinding Background}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource MainColor}" />
                            <Setter TargetName="PopupGrid" Property="IsOpen" Value="True" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="StackPanel" x:Key="FilterStackPanel">
        <!--<Setter Property="Margin" Value="10" />-->
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Label" x:Key="FilterLabel">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="10,0,10,0" />
        <Setter Property="Margin" Value="10,0,10,0" />
    </Style>

    <Style x:Key="DiscreteCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Height" Value="0" />
        <Setter Property="Padding" Value="10,0,10,0" />
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}"/>
        <Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid>
                            <!--<ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Margin="{TemplateBinding Padding}"  />-->
                            <Border Background="{TemplateBinding Background}" Opacity="0.3" />
                            <Border>
                                <Border.Background>
                                    <VisualBrush Opacity="1.0" Stretch="None">
                                        <VisualBrush.Visual>
                                            <Path Name="path" Opacity="1.0" Data="M 0 5 L 3 10 10 0" Stroke="#FF3838BA" StrokeThickness="1.5" 
                                                  StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round" />
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Border.Background>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="path" Property="Opacity" Value="1.0" />
                            <Setter TargetName="path" Property="Stroke" Value="#FF70A16F" />
                            <Setter TargetName="path" Property="StrokeThickness" Value="2.5" />
                        </Trigger>
                        <!--<Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource GrayTextBrushKey}" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Panel}}, Path=IsMouseOver}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard HandoffBehavior="Compose">
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.5" Storyboard.TargetProperty="Height" To="30" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard HandoffBehavior="Compose">
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.5" Storyboard.TargetProperty="Height" To="0" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Einstellungspfeil -->

    <Style x:Key="CheckboxEinstellungen" TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}" >
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Polyline x:Name="Polyline" Points="0,16 16,0 32,16" Stroke="{DynamicResource MainColor}" StrokeThickness="10" StrokeLineJoin="Round" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </BulletDecorator.Bullet>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Polyline" Property="Points" Value="0,0 16,16 32,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Slider -->

    <SolidColorBrush x:Key="CheckedOrangeBorder" Color="#FF8E4A1B" />
    <SolidColorBrush x:Key="CheckedBlueBorder" Color="#FF143874" />
    <Style x:Key="Slider" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnChecking">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="53" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnUnchecking">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <DockPanel x:Name="dockPanel">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" RecognizesAccessKey="True" VerticalAlignment="Center" />
                        <Grid>
                            <Border x:Name="BackgroundBorder" BorderBrush="{DynamicResource BgSlider}" Background="{DynamicResource BgSlider}" BorderThickness="0" CornerRadius="0" Height="27" Width="94">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Ellipse x:Name="Off" Width="14" Height="14" Stroke="White" StrokeThickness="2" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    <Line x:Name="On" X1="0" Y1="0" X2="0" Y2="14" Stroke="#FF7A7A7A" StrokeThickness="2" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Grid>
                            </Border>
                            <!-- Tatsächlicher Slider -->
                            <Border BorderBrush="{DynamicResource BorderSlider}" Background="{DynamicResource BackgroundNormal}" HorizontalAlignment="Left" x:Name="slider" Width="41" Height="28" BorderThickness="1" CornerRadius="0" RenderTransformOrigin="0.5,0.5" Margin="0">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Border.RenderTransform>
                            </Border>
                        </Grid>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource OnUnchecking}" x:Name="OnUnchecking_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource OnChecking}" x:Name="OnChecking_BeginStoryboard" />
                            </Trigger.EnterActions>
                            <Setter TargetName="On" Property="Stroke" Value="White" />
                            <Setter TargetName="Off" Property="Stroke" Value="White" />
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource MainColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- MouseOverEffekt für Buttons -->

    <Style x:Key="MouseOverEffect" TargetType="Control">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- InfoButton -->

    <Style x:Key="ButtonInfo" TargetType="Button" BasedOn="{StaticResource MouseOverEffect}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" >
                    <StackPanel Name="Info" Orientation="Horizontal" Background="Transparent">
                        <Label Content="{TemplateBinding Content}" VerticalAlignment="Center" />
                        <Path Data="M8,0 L8,10 M8,12 L8,16" Stroke="{DynamicResource MainColor}" StrokeThickness="5" StrokeLineJoin="Round" VerticalAlignment="Center" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Beenden Button -->

    <Style x:Key="BeendenButton" TargetType="Button" BasedOn="{StaticResource MouseOverEffect}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" >
                    <StackPanel Orientation="Horizontal" Background="Transparent">
                        <Label Content="Beenden" VerticalAlignment="Center" />
                        <Path Data="M0,0 L16,16 M0,16 L16,0" Stroke="{DynamicResource MainColor}" StrokeThickness="5" StrokeLineJoin="Round" VerticalAlignment="Center"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Metro Style -->

    <!--Background-->
    <SolidColorBrush x:Key="LightBackground" Color="Gray"/>

    <!--Foreground-->
    <SolidColorBrush x:Key="Foreground" Color="#FFFFFF"/>

    <!--General-->
    <SolidColorBrush x:Key="BackgroundHighlighted" Color="#54545C"/>
    <SolidColorBrush x:Key="BorderBrushHighlighted" Color="#6A6A75"/>
    <SolidColorBrush x:Key="BackgroundSelected" Color="#007ACC"/>
    <SolidColorBrush x:Key="BorderBrushSelected" Color="#1C97EA"/>
    <SolidColorBrush x:Key="BackgroundNormal" Color="#3F3F46"/>
    <SolidColorBrush x:Key="BorderBrushNormal" Color="#54545C"/>

    <!--Text Box-->
    <SolidColorBrush x:Key="TextBoxBackground" Color="#333337"/>
    <SolidColorBrush x:Key="TextBoxBackgroundSelected" Color="#3F3F46"/>

    <!--Search Text Box-->
    <SolidColorBrush x:Key="SearchTextForeground" Color="#999999"/>

    <!--Link Button-->
    <SolidColorBrush x:Key="LinkButtonForeground" Color="#1297FB"/>
    <SolidColorBrush x:Key="LinkButtonForegroundHighlighted" Color="#55AAFF"/>

    <!--Close Button-->
    <SolidColorBrush x:Key="CloseButtonBackgroundHighlighted" Color="#39ADFB"/>
    <SolidColorBrush x:Key="CloseButtonBackgroundPressed" Color="#084E7D"/>
    <SolidColorBrush x:Key="CloseButtonStroke" Color="#AAFFFFFF"/>
    <SolidColorBrush x:Key="CloseButtonStrokeHighlighted" Color="#FFFFFF"/>

    <!--Menu-->
    <SolidColorBrush x:Key="MenuSeparatorBorderBrush" Color="#333337"/>
    <SolidColorBrush x:Key="MenuItemHighlightedBackground" Color="#3E3E40"/>
    <SolidColorBrush x:Key="SubmenuItemBackground" Color="#1B1B1C"/>
    <SolidColorBrush x:Key="SubmenuItemBackgroundHighlighted" Color="#333334"/>
    <SolidColorBrush x:Key="MenuDisabledForeground" Color="#656565"/>

    <!--Scroll Bar-->
    <SolidColorBrush x:Key="ScrollBarPageButtonBackgroundHighlighted" Color="#05FFFFFF"/>

    <!-- Buttons -->
    <SolidColorBrush x:Key="ButtonBackgroundHighlighted" Color="#54545C"/>

    <Style TargetType="Button">
        <Setter Property="Visibility" Value="Visible"/>
        <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
        <Setter Property="Background" Value="{DynamicResource BackgroundNormal}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrushNormal}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border SnapsToDevicePixels="True"
				            BorderThickness="1"
				            BorderBrush="{TemplateBinding BorderBrush}" 
				            Background="{TemplateBinding Background}">
                        <Grid SnapsToDevicePixels="True" MinHeight="27">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrushHighlighted}" />
                            <Setter Property="Background" Value="{DynamicResource ButtonBackgroundHighlighted}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundSelected}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrushSelected}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LinkButton" TargetType="Button">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="{DynamicResource LinkButtonForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock><ContentPresenter/></TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource LinkButtonForegroundHighlighted}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Textbox -->

    <Style TargetType="TextBox" x:Key="StandardTextBox">
        <Setter Property="Background" Value="{DynamicResource TextBoxBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
        <Setter Property="CaretBrush" Value="{DynamicResource Foreground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="PART_ContentHost" Margin="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundSelected}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundSelected}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="TextBox" x:Key="SearchTextBox">
        <Setter Property="Background" Value="{DynamicResource TextBoxBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
        <Setter Property="CaretBrush" Value="{DynamicResource Foreground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true" MinHeight="27">
                        <TextBlock Foreground="{DynamicResource SearchTextForeground}" Margin="5,0,0,0" 
                                   VerticalAlignment="Center" Name="search" Text="Suchbegriff..." Visibility="Hidden" FontWeight="Normal" />
                        <ScrollViewer x:Name="PART_ContentHost" Margin="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TextBox.Text" Value="">
                            <Setter TargetName="search" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="TextBox.Text" Value="{x:Null}">
                            <Setter TargetName="search" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundSelected}" />
                            <Setter TargetName="search" Property="Foreground" Value="{DynamicResource Foreground}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundSelected}" />
                            <Setter TargetName="search" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ListBox -->

    <Style x:Key="StandardListBox" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundSelected}"/>
        <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Resources>
            <Style TargetType="{x:Type ListViewItem}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Grid Margin="4,0,4,4">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" SnapsToDevicePixels="True"/>
                                <ContentPresenter Margin="4,2"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsSelected" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="{DynamicResource BackgroundHighlighted}" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource BorderBrushHighlighted}" />
                                </MultiTrigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource BackgroundSelected}" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource BorderBrushSelected}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource BackgroundHighlighted}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
    </Style>

    <!-- Window -->

    <Style TargetType="Window" x:Key="StandardWindow">
        <Setter Property="Background" Value="{DynamicResource LightBackground}"/>
    </Style>

    <!-- ComboBoxToggleButton -->

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="20"/>
            </Grid.ColumnDefinitions>
            <Border SnapsToDevicePixels="True" x:Name="Border" Grid.ColumnSpan="2" Background="{DynamicResource BackgroundNormal}" BorderBrush="{DynamicResource BorderBrushNormal}" BorderThickness="1" />
            <Path x:Name="Arrow" Grid.Column="1" Opacity="0.6" Fill="{DynamicResource Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Arrow" Property="Opacity" Value="1" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource BorderBrushHighlighted}"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Arrow" Property="Opacity" Value="1" />
                <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource MainColor}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- ComboBoxTextBox -->

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <!-- ComboBox -->

    <Style TargetType="ComboBox">
        <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="27"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" 
                                      Template="{DynamicResource ComboBoxToggleButton}" 
                                      Grid.Column="2" 
                                      Focusable="false" 
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      ClickMode="Press"/>
                        <ContentPresenter Name="ContentSite" 
                                          IsHitTestVisible="False"  
                                          Content="{TemplateBinding SelectionBoxItem}" 
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Margin="3,3,23,3" 
                                          VerticalAlignment="Center" 
                                          HorizontalAlignment="Left"/>
                        <TextBox x:Name="PART_EditableTextBox" 
                                 CaretBrush="{DynamicResource Foreground}"
                                 Style="{x:Null}" 
                                 Template="{DynamicResource ComboBoxTextBox}" 
                                 HorizontalAlignment="Left" 
                                 VerticalAlignment="Center" 
                                 Margin="3,3,23,3" 
                                 Focusable="True" 
                                 Background="Transparent" 
                                 Foreground="{DynamicResource Foreground}" 
                                 Visibility="Hidden" 
                                 IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup VerticalOffset="-1" SnapsToDevicePixels="True" Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True" MinHeight="{TemplateBinding MinHeight}" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="{DynamicResource BackgroundNormal}" BorderThickness="1" BorderBrush="{DynamicResource BorderBrushNormal}"/>
                                <ScrollViewer SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="ComboBoxItem">
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBoxItem">
                            <Border Name="Border" Padding="2" SnapsToDevicePixels="true" BorderThickness="1">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsHighlighted" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource BackgroundHighlighted}"/>
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource BorderBrushHighlighted}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
    </Style>

</ResourceDictionary>